<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\PreInvoiceController
 */
class PreInvoiceControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $pre_invoice = factory(\App\Models\PreInvoice::class)->create();

        $response = $this->get(route('edit-invoice-number', ['preInvoice' => $pre_invoice->preInvoice]));

        $response->assertOk();
        $response->assertViewIs('invoices.edit');
        $response->assertViewHas('preInvoice');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('checkout', [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $pre_invoice = factory(\App\Models\PreInvoice::class)->create();

        $response = $this->patch(route('store-invoice-number', ['preInvoice' => $pre_invoice->preInvoice]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    // test cases...
}
